<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Ghurund.Controls"
	xmlns:propertyGrid="clr-namespace:Ghurund.Controls.PropertyGrid">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Controls;component/HintTextBox.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<Style TargetType="{x:Type propertyGrid:PropertyGrid}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{DynamicResource Ghurund.Background}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Ghurund.Border}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type propertyGrid:PropertyGrid}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<DockPanel>

							<Border DockPanel.Dock="Bottom" Padding="4">
								<StackPanel x:Name="descriptionPanel" HorizontalAlignment="Stretch">
									<TextBlock FontWeight="Bold" Text="{Binding /DisplayName}" />
									<TextBlock Text="{Binding /Description}" TextWrapping="Wrap" />
								</StackPanel>
							</Border>

							<Border>
								<ListBox x:Name="listBox" Background="{x:Null}" VirtualizingPanel.VirtualizationMode="Recycling"
										 Foreground="{TemplateBinding Foreground}" VirtualizingPanel.IsVirtualizing="True"
										 IsSynchronizedWithCurrentItem="True" Grid.IsSharedSizeScope="True"
										 KeyboardNavigation.TabNavigation="Continue"
										 HorizontalContentAlignment="Stretch" BorderThickness="0">

									<ListBox.GroupStyle>
										<GroupStyle>
											<GroupStyle.HeaderTemplate>
												<DataTemplate>
													<TextBlock Text="{Binding Name}" FontWeight="Bold" Height="20" Padding="4,0,4,0"/>
												</DataTemplate>
											</GroupStyle.HeaderTemplate>
											<GroupStyle.ContainerStyle>
												<Style>
													<Setter Property="Control.Margin" Value="0 0 0 8" />
												</Style>
											</GroupStyle.ContainerStyle>
										</GroupStyle>
									</ListBox.GroupStyle>

									<ListBox.ItemTemplate>
										<DataTemplate>
											<DockPanel Margin="4 0 4 0">
												<propertyGrid:PropertyEditorContainer x:Name="TitleBlock" Value="{Binding Value}"/>
											</DockPanel>
										</DataTemplate>
									</ListBox.ItemTemplate>

									<ListBox.ItemContainerStyle>
										<Style TargetType="ListBoxItem">
											<Setter Property="Focusable" Value="True" />
											<Setter Property="TabIndex" Value="0" />
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type ListBoxItem}">

														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto"  SharedSizeGroup="Column1"/>
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<TextBlock Name="TitleBlock" Text="{Binding DisplayName}"/>
															<ContentPresenter Grid.Column="1" />
														</Grid>

														<ControlTemplate.Triggers>
															<Trigger Property="IsSelected" Value="true">
																<Setter TargetName="TitleBlock" Property="Background" Value="{DynamicResource Ghurund.Highlight}" />
																<!--<Setter TargetName="TitleBlock" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />-->
															</Trigger>
														</ControlTemplate.Triggers>

													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ListBox.ItemContainerStyle>

								</ListBox>
							</Border>

						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style  x:Key="Ghurund.FlatButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Ghurund.Text.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:IconButton}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Height" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:IconButton}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Rectangle Name="rectangle" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Rectangle.OpacityMask>
								<ImageBrush ImageSource="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
							</Rectangle.OpacityMask>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Highlight}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Ghurund.Icon.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:IconRadioButton}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Height" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:IconRadioButton}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Rectangle Name="rectangle" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Rectangle.OpacityMask>
								<ImageBrush ImageSource="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
							</Rectangle.OpacityMask>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Highlight}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Ghurund.Accent}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Ghurund.Icon.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:IconCheckBox}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Height" Value="{DynamicResource Ghurund.IconSize.Small}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:IconCheckBox}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Rectangle Name="rectangle" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Rectangle.OpacityMask>
								<ImageBrush ImageSource="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
							</Rectangle.OpacityMask>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Highlight}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Ghurund.Selection}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Ghurund.Accent}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource Ghurund.Icon.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:LogsView}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{DynamicResource Ghurund.Background}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Ghurund.Border}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource Ghurund.Text.Primary}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:LogsView}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

						<ListBox x:Name="listBox" Background="{x:Null}"
										 Foreground="{TemplateBinding Foreground}"
										 IsSynchronizedWithCurrentItem="True" Grid.IsSharedSizeScope="True"
										 KeyboardNavigation.TabNavigation="Continue"
								 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
								 ItemContainerStyle="{DynamicResource Ghurund.ListBoxItemStyle}"
										 HorizontalContentAlignment="Stretch" BorderThickness="0">

							<ListBox.ItemTemplate>
								<DataTemplate>
									<DockPanel Margin="4 0 4 0">
										<TextBlock Text="{Binding Time}" Width="100"/>
										<TextBlock Text="{Binding Message}" TextWrapping="Wrap"/>
									</DockPanel>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
